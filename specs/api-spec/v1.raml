#%RAML 0.8
title: Prédiction
version: 1.0
baseUri: https://api.prediction.com/{version}
schemas:
  - ladders: |
      {
        "$schema": "http://json-schema.org/draft-03/schema",
        "type": "object",
        "properties": {
          "entries": {
            "required": true,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "required": true
                },
                "score": {
                  "type": "integer",
                  "required": true
                }
              }
            }
          }
        }
      }    
resourceTypes:
  - collection:
      usage: Liste d'éléments.
      description: Une liste d'éléments de type <<elementName>>.
      get:
        description: Retourne les <<elementName>>
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>>
traits:
  - authenticable:
      usage: Appliquer sur les méthodes qui permettent de s'identifier.
      description: Permet d'ouvrir un nouveau compte ou d'utiliser un compte existant.
      body:
        application/x-www-form-urlencoded:
          formParameters:
            email:
              description: Email à inscrire
            password:
              description: Mot de passe à associer à l'email
            tokenFacebook:
              description: Token d'identification Facebook
            tokenGooglePlus:
              description: Token d'identification Google+
            tokenTwitter:
              description: Token d'identification Twitter
  - secured:
      usage: Appliquer sur chaque méthode qui nécessite d'être identifié
      description: Certaines requêtes nécessites d'être identifié
      responses:
        401:
          description: L'authentification de l'utilisateur a échoué.
/registrations:
  post:
    description: |
      L'appel à cette URL créé un nouvel utilisateur.
      
      L'utilisateur peut utiliser soit un couple email / password soit un réseau
      social de son choix. Par la suite il pourra associer à son compte d'autres
      réseaux sociaux.
    is: [ authenticable ]
/sessions:
  post:
    description: |
      Permet de s'identifier auprès de l'API.
      
      L'utilisateur peut utiliser soit son couple email / password soit un des
      réseaux sociaux liés à son compte.
    is: [ authenticable ]
/users:
  /me:
    get:
      is: [ secured ]
      description: Retourne les informations de l'utilisateur identifié.
  /{userId}:
    get:
      is: [ secured ]
      description: |
        Retourne les informations d'un autre utilisateur.
        
        En fonction de la relation entre les deux utilisateurs, les
        informations retournées ne seront pas les mêmes.
/ladders:
  /{scope}:
    is: [ secured ]
    type: { collection: { elementName: "Entrée au classement" } }
    uriParameters:
      scope:
        description: Filtre le classement pour n'afficher que les amis.
        type: string
        pattern: friends|global
    /{tag}:
      is: [ secured ]
      type: { collection: { elementName: "Entrée au classement" } }
      uriParameters:
        tag:
          description: Filtre le classement pour ne prendre en compte qu'un tag.
          type: string

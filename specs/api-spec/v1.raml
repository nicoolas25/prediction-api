#%RAML 0.8
#vim syntax:yaml
title: Prédiction
version: 1.0
baseUri: https://api.prediction.com/{version}
schemas:
  - user: |
      {
        "$schema": "http://json-schema.org/schema",
        "type": "object",
        "title": "User",
        "properties": {
          "id": {
            "type": "string",
            "require": true
          },
          "nickname": {
            "type": "string",
            "require": true
          }
        }
      }
  - ladders: |
      {
        "$schema": "http://json-schema.org/schema",
        "type": "object",
        "title": "Ladder list",
        "properties": {
          "entries": {
            "required": true,
            "type": "array",
            "items": {
              "type": "object",
              "title": "Ladder entry",
              "properties": {
                "userId": {
                  "type": "string",
                  "required": true
                },
                "score": {
                  "type": "integer",
                  "required": true
                }
              }
            }
          }
        }
      }
  - predictions: |
      {
        "$schema": "http://json-schema.org/schema",
        "type": "object",
        "properties": {
          "entries": {
            "required": true,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "predictionId": {
                  "type": "string",
                  "required": true
                },
                "label": {
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        }
      }
  - prediction: |
      {
        "$schema": "http://json-schema.org/schema",
        "type": "object",
        "title": "Prediction",
        "properties": {
          "predictionId": {
            "type": "string",
            "required": true
          },
          "label": {
            "type": "string",
            "required": true
          },
          "components": {
            "type": "array",
            "required": false,
            "items": {
              "type": "object",
              "title": "Component",
              "properties": {
                "label": {
                  "type": "string",
                  "required": true
                },
                "componentType": {
                  "type": "string",
                  "required": true
                },
                "choices": {
                  "type": "array",
                  "required": false,
                  "items": {
                    "type": "object",
                    "title": "Choice",
                    "properties": {
                      "label": {
                        "type": "string",
                        "required": "true"
                      },
                      "choiceId": {
                        "type": "string",
                        "required": true
                      },
                      "predictions": {
                        "type": "integer",
                        "required": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
  - newPrediction: |
      {
        "$schema": "http://json-schema.org/schema",
        "type": "object",
        "title": "Prediction being created",
        "properties": {
          "label": {
            "type": "string",
            "required": true
          },
          "components": {
            "type": "array",
            "required": true,
            "items": {
              "type": "object",
              "title": "Component being created",
              "properties": {
                "label": {
                  "type": "string",
                  "required": true
                },
                "componentType": {
                  "type": "string",
                  "required": true
                },
                "choices": {
                  "type": "array",
                  "required": false,
                  "items": {
                    "type": "object",
                    "title": "Choice",
                    "properties": {
                      "label": {
                        "type": "string",
                        "required": "true"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
resourceTypes:
  - collection:
      usage: Liste d'éléments.
      description: Une liste d'éléments de type <<elementName>>.
      get:
        description: Retourne les <<elementName>>
        responses:
          200:
            description: Les éléments demandés sont disponibles dans le corps de la réponse.
            body:
              application/json:
                schema: <<resourcePathName>>
  - member:
      usage: Détails d'un élément.
      description: Accède à un membre de type <<elementName>>.
      get:
        responses:
          200:
            description: L'élément demandé est accessible dans le corps de la réponse.
            body:
              application/json:
                schema: <<resourcePathName | !singularize >>
  - user:
      description: Un utilisateur.
      get:
        responses:
          200:
            body:
              application/json:
                schema: user
traits:
  - authenticable:
      usage: Appliquer sur les méthodes qui permettent de s'identifier.
      description: Permet d'ouvrir un nouveau compte ou d'utiliser un compte existant.
      body:
        application/x-www-form-urlencoded:
          formParameters:
            email:
              description: Email à inscrire
            password:
              description: Mot de passe à associer à l'email
            tokenFacebook:
              description: Token d'identification Facebook
            tokenGooglePlus:
              description: Token d'identification Google+
            tokenTwitter:
              description: Token d'identification Twitter
      responses:
        401:
          description: Les identifiants fournis sont invalides.
        200:
          description: |
            L'utilisateur est maintenant identifié.
            
            Il est possible d'utiliser les informations contenue dans cette
            réponse pour utiliser le reste de l'API.
          body:
            application/json:
              example: TODO
  - secured:
      usage: Appliquer sur chaque méthode qui nécessite d'être identifié
      description: Certaines requêtes nécessites d'être identifié
      responses:
        401:
          description: L'identité de l'utilisateur n'a pas pu être établie.
/registrations:
  post:
    is: [ authenticable ]
    description: |
      L'appel à cette URL créé un nouvel utilisateur.
      
      L'utilisateur peut utiliser soit un couple email / password soit un réseau
      social de son choix. Par la suite il pourra associer à son compte d'autres
      réseaux sociaux.
      
      Lors de le création de compte le choix d'un pseudonyme unique est obligatoire.
    body:
      application/x-www-form-urlencoded:
        formParameters:
          nickname:
            description: Pseudonyme du nouveau joueur
            required: true
    responses:
      409:
        description: |
          Code retourné lorsqu'il y a un conflit.
          
          Dans le corps de la réponse figurent plus de détails sur l'origine
          de ce conflit. Ça peut être un email déjà utilisé ou bien un compte de
          réseau social déjà lié ou encore un pseudo déjà utilisé.
        body:
          application/json:
            example: |
              {
                "errors": [
                  {
                    "field": "facebookToken",
                    "reason": "is invalid"
                  },
                  {
                    "field": "nickname",
                    "reason": "is already taken"
                  }
                ]
              }
/sessions:
  post:
    description: |
      Permet de s'identifier auprès de l'API.
      
      L'utilisateur peut utiliser soit son couple email / password soit un des
      réseaux sociaux liés à son compte.
    is: [ authenticable ]
/users:
  /me:
    is: [ secured ]
    type: user
    get:
      description: Retourne les informations de l'utilisateur identifié.
  /{userId}:
    is: [ secured ]
    type: user
    get:
      description: |
        Retourne les informations d'un autre utilisateur.
        
        En fonction de la relation entre les deux utilisateurs, les
        informations retournées ne seront pas les mêmes.
/ladders:
  /{scope}:
    is: [ secured ]
    type: { collection: { elementName: "Entrée au classement" } }
    uriParameters:
      scope:
        description: Filtre le classement pour n'afficher que les amis.
        type: string
        pattern: friends|global
    /{tag}:
      is: [ secured ]
      type: { collection: { elementName: "Entrée au classement" } }
      uriParameters:
        tag:
          description: Filtre le classement pour ne prendre en compte qu'un tag.
          type: string
/predictions:
  is: [ secured ]
  post:
    description: |
      Créé une nouvelle prédiction.
      
      Dans un premier temps seuls les administrateurs ne seront autorisés à créer
      des prédictions.
    body:
      application/json:
        schema: newPrediction
  /{predictionId}:
    is: [ secured ]
    type: { member: { elementName: "Prédiction" } }
    uriParameters:
      predictionId:
        description: Seléctionne une prédiction en particulier.
        type: string
  /{scope}:
    is: [ secured ]
    type: { collection: { elementName: "Prédictions" } }
    uriParameters:
      scope:
        description: Filtre les prédictions pour n'afficher que les amis.
        type: string
        pattern: friends|global|userId
    /{tag}:
      is: [ secured ]
      type: { collection: { elementName: "Prédictions" } }
      uriParameters:
        tag:
          description: Filtre les prédictions pour n'afficher qu'un certain tag.
          type: string
